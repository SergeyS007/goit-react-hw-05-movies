{"version":3,"file":"static/js/935.700f539d.chunk.js","mappings":"gQAEaA,EAAYC,EAAAA,GAAAA,IAAH,0CAITC,EAAOD,EAAAA,GAAAA,KAAH,iEAKJE,EAAOF,EAAAA,GAAAA,GAAH,+FAKJG,EAAKH,EAAAA,GAAAA,GAAH,+CAGFI,EAAQJ,EAAAA,GAAAA,IAAH,8C,SCqClB,EAnDqB,WACnB,IAAMK,ECFqB,WAC3B,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOD,EAAP,KAAcE,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GAAII,KAAKL,EACzB,GAAE,CAACC,IACJK,QAAQC,IAAI,iBAAkBT,GACvBA,CACR,CDPeU,GACRC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAGjB,OAFAN,QAAQC,IAAI,WAAYI,EAASE,QAG/B,iCACE,mBACEC,QAAS,0BAAML,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUE,aAAX,aAAC,EAAiBE,YAAlB,QAA0B,IAAxC,EACTC,KAAK,SAFP,qBAMClB,IACC,UAACN,EAAD,YACE,SAACK,EAAD,CACEoB,IAAG,0CAAqCnB,EAAMoB,eAC9CC,IAAKrB,EAAMsB,MACXC,MAAM,SAER,4BACE,wBAAKvB,EAAMwB,kBACX,wCAAqC,GAArBxB,EAAMyB,aAAtB,QACA,0BACE,SAAC7B,EAAD,yBACCI,EAAM0B,SAAU,QAEnB,SAAC9B,EAAD,uBACA,SAACC,EAAD,UACGG,EAAM2B,OAAOC,KAAI,SAAAC,GAAK,OACrB,SAAC/B,EAAD,UAAoB+B,EAAMC,MAAjBD,EAAM1B,GADM,aAO/B,mDACA,2BACE,yBACE,SAAC,KAAD,CAAM4B,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,KAAD,MAGL,C,+LEpDDC,EAAAA,EAAAA,SAAAA,QAAyB,sCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,0BAA6BC,IAD/C,cACCE,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAe/B,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,8EACLK,QAAQC,IAAI,WAAYN,GADnB,SAEkB6B,EAAAA,EAAAA,IAAA,UAAa7B,EAAb,oBAA2B8B,IAF7C,cAECE,EAFD,yBAGEA,EAASC,MAHX,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA6BnC,GAA7B,8EACLK,QAAQC,IAAI,WAAYN,GADnB,SAEkB6B,EAAAA,EAAAA,IAAA,UAAa7B,EAAb,4BAAmC8B,IAFrD,cAECE,EAFD,yBAGEA,EAASC,MAHX,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCpC,GAAhC,8EACLK,QAAQC,IAAI,WAAYN,GADnB,SAEkB6B,EAAAA,EAAAA,IAAA,UAAa7B,EAAb,4BAAmC8B,IAFrD,cAECE,EAFD,yBAGEA,EAASC,MAHX,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBT,EAAAA,EAAAA,IAAA,4DACgCC,EADhC,kBACiDQ,IAFnE,cACCN,EADD,yBAIEA,EAASC,MAJX,kE","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","Hooks/UseFetchMovie.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n`;\n\nexport const Text = styled.span`\n  display: block;\n  font-weight: bold;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  list-style: none;\n  justify-content: flex-start;\n`;\nexport const Li = styled.li`\n  margin-right: 10px;\n`;\nexport const Image = styled.img`\n  object-fit: cover;\n`;\n","import { Link, Outlet } from 'react-router-dom';\nimport { useFetchMovie } from '../../Hooks/UseFetchMovie';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Container, Text, List, Li, Image } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const movie = useFetchMovie();\n  const navigate = useNavigate();\n  const location = useLocation();\n  console.log('location', location.state);\n\n  return (\n    <>\n      <button\n        onClick={() => navigate(location?.state?.from ?? '/')}\n        type=\"button\"\n      >\n        Go back\n      </button>\n      {movie && (\n        <Container>\n          <Image\n            src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`}\n            alt={movie.title}\n            width=\"200\"\n          />\n          <div>\n            <h2>{movie.original_title}</h2>\n            <p>User score: {movie.vote_average * 10}%</p>\n            <p>\n              <Text>Overview: </Text>\n              {movie.overview}{' '}\n            </p>\n            <Text>Genres:</Text>\n            <List>\n              {movie.genres.map(genre => (\n                <Li key={genre.id}>{genre.name}</Li>\n              ))}\n            </List>\n          </div>\n        </Container>\n      )}\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieById } from '../services/api';\n\nexport const useFetchMovie = () => {\n  const [movie, setMovie] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchMovieById(id).then(setMovie);\n  }, [id]);\n  console.log('useFetchMovie ', movie);\n  return movie;\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/movie/';\nconst api_key = 'eef58e7402eb4560bd5a271abcaa31e6';\n\nexport async function fetchMovies() {\n  const response = await axios.get(`popular?api_key=${api_key}`);\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  console.log('in fetch', id);\n  const response = await axios.get(`${id}?api_key=${api_key}`);\n  return response.data;\n}\n\nexport async function fetchCastById(id) {\n  console.log('in fetch', id);\n  const response = await axios.get(`${id}/credits?api_key=${api_key}`);\n  return response.data;\n}\n\nexport async function fetchReviewsById(id) {\n  console.log('in fetch', id);\n  const response = await axios.get(`${id}/reviews?api_key=${api_key}`);\n  return response.data;\n}\n\nexport async function fetchMovieByName(query) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${api_key}&query=${query}`\n  );\n  return response.data;\n}\n"],"names":["Container","styled","Text","List","Li","Image","movie","useState","setMovie","id","useParams","useEffect","fetchMovieById","then","console","log","useFetchMovie","navigate","useNavigate","location","useLocation","state","onClick","from","type","src","backdrop_path","alt","title","width","original_title","vote_average","overview","genres","map","genre","name","to","axios","api_key","fetchMovies","response","data","results","fetchCastById","fetchReviewsById","fetchMovieByName","query"],"sourceRoot":""}