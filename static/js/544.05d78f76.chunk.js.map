{"version":3,"file":"static/js/544.05d78f76.chunk.js","mappings":"yMAEaA,EAAYC,EAAAA,GAAAA,GAAH,4CAITC,EAAaD,EAAAA,GAAAA,GAAH,mG,kBCevB,EAhBmB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACL,EAAD,UACGG,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,UACE,SAACF,EAAD,UAAaK,EAAMK,oBAFdL,EAAME,GADA,KAStB,C,8ECED,UAhBa,WACX,OAAkCI,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAOA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAcC,KAAKH,EACpB,GAAE,KAGD,4BACE,4CACA,SAAC,IAAD,CAAYZ,OAAQW,MAGzB,C,+LCjBDK,EAAAA,EAAAA,SAAAA,QAAyB,sCACzB,IAAMC,EAAU,mCAET,SAAeH,IAAtB,4CAAO,OAAP,oBAAO,oGACkBE,EAAAA,EAAAA,IAAA,0BAA6BC,IAD/C,cACCC,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8Bf,GAA9B,8EACLgB,QAAQC,IAAI,WAAYjB,GADnB,SAEkBU,EAAAA,EAAAA,IAAA,UAAaV,EAAb,oBAA2BW,IAF7C,cAECC,EAFD,yBAGEA,EAASC,MAHX,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA6BlB,GAA7B,8EACLgB,QAAQC,IAAI,WAAYjB,GADnB,SAEkBU,EAAAA,EAAAA,IAAA,UAAaV,EAAb,4BAAmCW,IAFrD,cAECC,EAFD,yBAGEA,EAASC,MAHX,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAgCnB,GAAhC,8EACLgB,QAAQC,IAAI,WAAYjB,GADnB,SAEkBU,EAAAA,EAAAA,IAAA,UAAaV,EAAb,4BAAmCW,IAFrD,cAECC,EAFD,yBAGEA,EAASC,MAHX,kEAMA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBX,EAAAA,EAAAA,IAAA,4DACgCC,EADhC,kBACiDU,IAFnE,cACCT,EADD,yBAIEA,EAASC,MAJX,kE","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  font-size: 12px;\n`;\n\nexport const MoviesName = styled.h3`\n  padding: 2px;\n  margin-top: 2px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { Link } from 'react-router-dom';\nimport { Container, MoviesName } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <MoviesName>{movie.original_title}</MoviesName>\n          </Link>\n        </li>\n      ))}\n    </Container>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  // location: PropTypes.object.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { fetchMovies } from 'services/api';\n// import { useLocation } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [imageList, setImageList] = useState([]);\n  // const location = useLocation();\n\n  useEffect(() => {\n    fetchMovies().then(setImageList);\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      <MoviesList movies={imageList} />\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/movie/';\nconst api_key = 'eef58e7402eb4560bd5a271abcaa31e6';\n\nexport async function fetchMovies() {\n  const response = await axios.get(`popular?api_key=${api_key}`);\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  console.log('in fetch', id);\n  const response = await axios.get(`${id}?api_key=${api_key}`);\n  return response.data;\n}\n\nexport async function fetchCastById(id) {\n  console.log('in fetch', id);\n  const response = await axios.get(`${id}/credits?api_key=${api_key}`);\n  return response.data;\n}\n\nexport async function fetchReviewsById(id) {\n  console.log('in fetch', id);\n  const response = await axios.get(`${id}/reviews?api_key=${api_key}`);\n  return response.data;\n}\n\nexport async function fetchMovieByName(query) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${api_key}&query=${query}`\n  );\n  return response.data;\n}\n"],"names":["Container","styled","MoviesName","movies","location","useLocation","map","movie","to","id","state","from","original_title","useState","imageList","setImageList","useEffect","fetchMovies","then","axios","api_key","response","data","results","fetchMovieById","console","log","fetchCastById","fetchReviewsById","fetchMovieByName","query"],"sourceRoot":""}