{"version":3,"file":"static/js/62.0aec0583.chunk.js","mappings":"wMAEaA,EAAYC,EAAAA,GAAAA,GAAH,4CAITC,EAAaD,EAAAA,GAAAA,GAAH,mG,kBCevB,EAhBmB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACL,EAAD,UACGG,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,UACE,SAACF,EAAD,UAAaK,EAAMK,oBAFdL,EAAME,GADA,KAStB,C,+FCmBD,UAjCoB,WAClB,OAA4BI,EAAAA,EAAAA,UAAS,MAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,aACzBf,GAAWC,EAAAA,EAAAA,MACjBe,QAAQC,IAAIjB,GAeZ,OAPAkB,EAAAA,EAAAA,YAAU,WACHJ,IACLK,EAAAA,EAAAA,IAAiBL,GAAOM,KAAKV,EAC9B,GAAE,CAACI,IAEJE,QAAQC,IAAIlB,IAGV,4BACE,kBAAMsB,SAfW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,SAASC,UAAUH,MAC1CX,EAAgB,CAAEc,UAAWH,GAC9B,EAWG,WACE,kBAAOI,KAAK,YAAYC,KAAK,UAC7B,0CAGD9B,IAAU,SAAC,IAAD,CAAYA,OAAQA,EAAO+B,WACtC,SAAC,KAAD,MAGL,C,+LClCDC,EAAAA,EAAAA,SAAAA,QAAyB,sCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBF,EAAAA,EAAAA,IAAA,0BAA6BC,IAD/C,cACCE,EADD,yBAEEA,EAASC,KAAKL,SAFhB,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8B/B,GAA9B,8EACLW,QAAQC,IAAI,WAAYZ,GADnB,SAEkB0B,EAAAA,EAAAA,IAAA,UAAa1B,EAAb,oBAA2B2B,IAF7C,cAECE,EAFD,yBAGEA,EAASC,MAHX,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA6BhC,GAA7B,8EACLW,QAAQC,IAAI,WAAYZ,GADnB,SAEkB0B,EAAAA,EAAAA,IAAA,UAAa1B,EAAb,4BAAmC2B,IAFrD,cAECE,EAFD,yBAGEA,EAASC,MAHX,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCjC,GAAhC,8EACLW,QAAQC,IAAI,WAAYZ,GADnB,SAEkB0B,EAAAA,EAAAA,IAAA,UAAa1B,EAAb,4BAAmC2B,IAFrD,cAECE,EAFD,yBAGEA,EAASC,MAHX,kEAMA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCL,GAAhC,uFACkBiB,EAAAA,EAAAA,IAAA,4DACgCC,EADhC,kBACiDlB,IAFnE,cACCoB,EADD,yBAIEA,EAASC,MAJX,kE","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/MovieSearch/MovieSearch.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  font-size: 12px;\n`;\n\nexport const MoviesName = styled.h3`\n  padding: 2px;\n  margin-top: 2px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { Link } from 'react-router-dom';\nimport { Container, MoviesName } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <MoviesName>{movie.original_title}</MoviesName>\n          </Link>\n        </li>\n      ))}\n    </Container>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  // location: PropTypes.object.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { fetchMovieByName } from 'services/api';\nimport { Outlet, useLocation, useSearchParams } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst MovieSearch = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('moviename');\n  const location = useLocation();\n  console.log(location);\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const value = e.target.elements.moviename.value;\n    setSearchParams({ moviename: value });\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    fetchMovieByName(query).then(setMovies);\n  }, [query]);\n\n  console.log(movies);\n\n  return (\n    <div>\n      <form onSubmit={onFormSubmit}>\n        <input name=\"moviename\" type=\"text\" />\n        <button>Search</button>\n      </form>\n\n      {movies && <MoviesList movies={movies.results} />}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieSearch;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/movie/';\nconst api_key = 'eef58e7402eb4560bd5a271abcaa31e6';\n\nexport async function fetchMovies() {\n  const response = await axios.get(`popular?api_key=${api_key}`);\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  console.log('in fetch', id);\n  const response = await axios.get(`${id}?api_key=${api_key}`);\n  return response.data;\n}\n\nexport async function fetchCastById(id) {\n  console.log('in fetch', id);\n  const response = await axios.get(`${id}/credits?api_key=${api_key}`);\n  return response.data;\n}\n\nexport async function fetchReviewsById(id) {\n  console.log('in fetch', id);\n  const response = await axios.get(`${id}/reviews?api_key=${api_key}`);\n  return response.data;\n}\n\nexport async function fetchMovieByName(query) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${api_key}&query=${query}`\n  );\n  return response.data;\n}\n"],"names":["Container","styled","MoviesName","movies","location","useLocation","map","movie","to","id","state","from","original_title","useState","setMovies","useSearchParams","searchParams","setSearchParams","query","get","console","log","useEffect","fetchMovieByName","then","onSubmit","e","preventDefault","value","target","elements","moviename","name","type","results","axios","api_key","fetchMovies","response","data","fetchMovieById","fetchCastById","fetchReviewsById"],"sourceRoot":""}